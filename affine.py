# -*- coding: utf-8 -*-
"""Affine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ongh3cEFsZJcK3WiEFsyw7xdf1Punrwo
"""

def affine_en(plain,a,b):
  res = ""
  for i in range(len(plain)):
    char = plain[i]
    if(char.islower()):
      n = ((ord(char)-97)*a)+b
      #print(n)
      res += chr((n%26)+97)
    elif(char.isupper()):
      #print(ord(char))
      n = ((ord(char)-65)*a)+b
      res += chr((n%26)+65)
    else:
      res += char
  return res

def inv(a):
  t1=0
  t2=1
  r=0
  r1 = 26
  r2 = a
  while(r1!=1):
    q = r1//r2
    r = r1%r2
    t = t1 - q*t2
    t1 = t2
    t2 = t
    r1 = r2
    r2 = r
  if(t1<26) and t1<0 :
    t1 = t1+26
  return t1

def affine_de(cipher,a,b):
  res1 = ""
  a = inv(a)
  print(a)
  for i in range(len(cipher)):
    char = cipher[i]
    if(char.islower()):
      n = ((ord(char)-97)-b)
      if(n<0):
        n = n+26
      n = n*a
      #print(n)
      res1 += chr((n%26)+97)
    elif(char.isupper()):
      n = ((ord(char)-65)-b)
      if(n<0):
        n = n+26
      n = n*a
      #print(n)
      res1 += chr((n%26)+65)
    else:
      res1 += char
  print(res1)

plain = "SQ"
a = 11
b = 10
print(affine_en(plain,a,b))
affine_de(affine_en(plain,a,b),a,b)

# ATTACK
def attack(cipher):
  dict = {1:1,3:9,5:21,7:15,9:3,11:19,15:7,17:23,19:11,21:5,23:17,25:25}
  for i in dict:
    a = dict[i]
    for j in range(25):
      print("Key",a," ",j)
      affine_de(cipher,a,j)
cipher = "AE"
attack(cipher)

c1 = "AF"
c2 = "FI"
c3 = "NE"
c4 = "CI"
c5 = "PH"
c6 = "ER"

